---
layout: post
title: creating dynamic classification trees in R using dplyr, rpart & shiny
date: 2016-09-23
description: using a shiny app embedded into an RMarkdown html document that allows users to observe how a classification tree changes as the user selects / deselects different attributes
---
This <a href="http://rmarkdown.rstudio.com" target="_blank">R Markdown</a>code block will produce an embedded <a href="http://shiny.rstudio.com" target="_blank">Shiny</a> application that allows users to chose any combination of attributes in a dataset and immediately see the resulting tree plotted using the <a href="http://www.milbo.org/doc/prp.pdf" target="_blank">rpart.plot</a>package. The resulting application will look something like this:

<div class="img_row">
	<img class="col three" src="/img/dynam_tree.tiff">
</div>

{% highlight c++ %}
---
title: "creating dynamic classification trees in R using dplyr, rpart & shiny"
author: "Patrick Ahearn"
output:
  html_document:
    theme:  paper
    highlight:  tango
    #css:  style.css
runtime: shiny
---
<br>

####load the necessary r packages

```{r,echo=TRUE,message=FALSE}
library(shiny)
library(dplyr)
library(rpart.plot)
library(rpart)
```
####import and load the pima indians <a href="https://archive.ics.uci.edu/ml/datasets/Pima+Indians+Diabetes" target="_blank">Pima Indians Diabetes Dataset</a>
```{r}
file <- "https://archive.ics.uci.edu/ml/machine-learning-databases/pima-indians-diabetes/pima-indians-diabetes.data"
data <- read.csv(file, header=F)
names(data) <- c("preg","plas","press","skin","ins","mass","pedi","age","class")
```
####create an embedded shiny app code block with both UI and Server components
```{r}
shinyApp(
  ui=(fluidPage(

    titlePanel(title=h4("Classification Tree",align="center")),

    sidebarLayout(
      sidebarPanel(
        selectInput("attributes2",
                    label = "Attribute:",
                    choices = c("preg"=1,"plas"=2,"press"=3,"skin"=4,"ins"=5,"mass"=6,"pedi"=7,"age"=8),
                    selected = c(6,2),
                    multiple = TRUE)
      ),

      mainPanel(
        plotOutput("treePlot")
      )
    )
  )),

  server=(function(input, output) {

    output$treePlot <- renderPlot({

      dt_tree=data%>%
        select(as.numeric(input$attributes2))

      dt_tree=dt_tree%>%
        mutate(data[,9])

      names(dt_tree)[names(dt_tree)=="data[, 9]"]="class"

      tree1=rpart(class~., data=dt_tree,method = "class",parms=list(split="split"))

      rpart.plot(tree1)
    })

  }),
  options=list(height=460)
)
```

*data source: Lichman, M. (2013). UCI Machine Learning Repository [http://archive.ics.uci.edu/ml]. Irvine, CA: University of California, School of Information and Computer Science*
int main(int argc, char const *argv[])

{% endhighlight %}
